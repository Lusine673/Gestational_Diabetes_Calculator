import streamlit as st
import numpy as np

st.title("Калькулятор прогноза риска ГСД (1-й триместр)")
st.write("Модель построена на основании аминокислот мочи, метод PCA + логистическая регрессия")

# === Средние и СКО по аминокислотам ===
MEAN_SD = {
    "Arg": (2.7350, 1.50693),
    "Val": (5.2130, 3.31922),
    "His": (66.3570, 28.56833),
    "Met": (1.0650, 0.50535),
    "Thr": (62.0610, 47.83117),
    "Leu": (4.8680, 3.09671),
    "Lys": (16.3530, 11.79775),
    "Ile": (1.5400, 1.23630),
    "Trp": (26.3690, 13.68279),
    "Phe": (7.3510, 4.83801),
    "Ala": (96.1120, 82.19588),
    "Asn": (28.5810, 19.76832),
    "Asp": (0.7090, 0.33428),
    "Gly": (336.7640, 152.82278),
    "Gln": (17.0630, 15.18315),
    "Glu": (9.4830, 4.07169),
    "Ser": (79.2850, 35.81638),
    "Tau": (11.5060, 18.20113),
    "Tyr": (17.4020, 10.90420),
    "Orn": (1.0270, 0.63094),
    "Cit": (2.3130, 1.67246),
    "Hcy": (0.8170, 0.54916),
    "Cys": (4.6520, 1.70270),
    "Aad": (4.8390, 2.66305),
    "1MH": (20.7350, 8.19387),
    "3MH": (25.4750, 19.65960),
    "Abu": (1.2330, 0.63144),
    "gAbu": (0.7760, 0.57695),
    "Pet": (1.6500, 0.74768),
    "Pse": (1.7040, 2.29975),
    "Eta": (64.4460, 16.94221)
}

# === PCA коэффициенты (Factor Score Coefficient Matrix) ===
FACTOR_COEFFS = {
    "FAC1": {"Arg":0.011,"Val":0.065,"His":0.027,"Met":0.040,"Thr":0.067,"Leu":0.054,"Lys":0.019,"Ile":0.066,"Trp":0.054,"Phe":0.063,"Ala":0.059,"Asn":0.067,"Asp":0.027,"Gly":0.062,"Gln":0.059,"Glu":0.056,"Ser":0.068,"Tau":0.007,"Tyr":0.065,"Orn":0.034,"Cit":0.051,"Hcy":0.032,"Cys":0.014,"Aad":0.040,"1MH":0.052,"3MH":0.044,"Abu":0.055,"gAbu":0.031,"Pet":0.020,"Pse":-0.006,"Eta":0.006},
    "FAC2": {"Arg":-0.057,"Val":-0.041,"His":0.152,"Met":-0.111,"Thr":-0.006,"Leu":-0.100,"Lys":0.072,"Ile":-0.031,"Trp":-0.044,"Phe":0.001,"Ala":-0.067,"Asn":0.010,"Asp":0.147,"Gly":-0.024,"Gln":0.043,"Glu":-0.075,"Ser":0.002,"Tau":-0.056,"Tyr":-0.004,"Orn":0.150,"Cit":-0.058,"Hcy":0.139,"Cys":0.017,"Aad":-0.010,"1MH":0.058,"3MH":-0.023,"Abu":0.013,"gAbu":0.143,"Pet":0.109,"Pse":0.049,"Eta":-0.002},
    "FAC3": {"Arg":-0.035,"Val":0.057,"His":0.086,"Met":-0.002,"Thr":-0.036,"Leu":-0.006,"Lys":0.233,"Ile":-0.026,"Trp":-0.057,"Phe":-0.098,"Ala":0.042,"Asn":-0.029,"Asp":-0.051,"Gly":-0.063,"Gln":-0.109,"Glu":-0.054,"Ser":-0.020,"Tau":-0.061,"Tyr":-0.069,"Orn":-0.006,"Cit":0.111,"Hcy":-0.065,"Cys":0.007,"Aad":0.217,"1MH":-0.017,"3MH":0.181,"Abu":0.058,"gAbu":-0.061,"Pet":0.077,"Pse":-0.087,"Eta":0.212}
}

# === Логистическая регрессия ===
B0 = 0.001
B1 = 0.372
B2 = -0.475
B3 = -0.554

# === Поля для ввода ===
st.header("Введите значения аминокислот")
inputs = {}
for aa in MEAN_SD.keys():
    inputs[aa] = st.number_input(aa, value=0.0)

if st.button("Рассчитать риск"):
    # 1. Стандартизация
    z_scores = {}
    for aa, val in inputs.items():
        mean, sd = MEAN_SD[aa]
        z_scores[aa] = (val - mean) / sd if sd != 0 else 0

    # 2. Расчет факторов
    FAC1 = sum(FACTOR_COEFFS["FAC1"][aa]*z_scores[aa] for aa in z_scores)
    FAC2 = sum(FACTOR_COEFFS["FAC2"][aa]*z_scores[aa] for aa in z_scores)
    FAC3 = sum(FACTOR_COEFFS["FAC3"][aa]*z_scores[aa] for aa in z_scores)

    # 3. Логит-модель
    logit = B0 + B1*FAC1 + B2*FAC2 + B3*FAC3
    p = np.exp(logit) / (1 + np.exp(logit))

    # 4. Результат
    st.subheader(f"Вероятность развития ГСД: {p:.2f}")
    if p >= 0.45:
        st.error("Высокий риск развития")
    else:
        st.success("Низкий риск развития")
